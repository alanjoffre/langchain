Curso completo


Ambiente testado com python 3.11
Criar ambiente virtual para o curso/projeto
Abra o terminal no vs-cODE
Digite o seguinte comando para cirar o ambiente virtual: python -m venv .venv
Digite o seguinte comando par ativar o ambiente virtual: .\.venv\Scripts\Activate.ps1

Crie uma pasta: Class1
Dentro do diretório criado um arqui com o seguinte nome: main.py

Digite no arquivo main.py - Para verificar se o ambiente esta ok
print ("Teste")

Digite o seguinte comando para rodar o app em python: python main.py

Na raiz do diretório crie um arquivo: .env

No arquivo .env digite, edite da seguinte forma:

OPENAI_API_KEY=
OPENAI_ORGANIZATION=

Para conseguir as chaves acesse o site: https://platform.openai.com/playground
Aba: API keys
Crie uma nova chave: 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
Edite o arquivo.env: OPENAI_API_KEY=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
Volte para o site da OPENAI, aba Settings, Organization, campo Oraganization ID e copie a chave
Edite o arquivo.env: OPENAI_ORGANIZATION=org-sOXDAj9SRTV4LamTyl0Q8XmO

Documentações, links e miscelânea
Antes de começarmos, tenha uma conta criada na Open AI
- Talvez seja necessário comprar créditos, o mínimo é 5 dólares, mas vale a pena! Pra você ter uma ideia, 
durante a gravação desse curso gastei apenas 36 centavos de dólar (atualmente perto dos R$1,80)
Usaremos a ferramenta Streamlit para nossas interfaces, mas não se preocupe, você não precisa ter conhecimento nessa ferramenta.
Tenha Python instalado na sua máquina
E pra seguir as aulas sem problema, acesse nosso repositório no Github!

Depois de baixado todo o material do github. Volte para o diretório raiz do projeto e digite o seguinte comando
para configurar o ambiente com o arquivo: requirements.txt: pip install -r requeriments.txt

Volte para o diretório Class1.
Edite o arquivo main.py conforme o arquivo de mesmo nome baixado no github
Lembre-se que será necessário crédito para realizar a consulta ns internet do seu robo!
Digite o seguinte comando para rodar o app em python: python main.py

Comando para rodar o Streamlit no projeto Class2: streamlit run front.py

Importando os document_loaders no projeto Class3 pelo site: https://python.langchain.com/docs/integrations/document_loaders

Class5 - Main.py - Projeto: Bot conversando com uma base de dados

Importante: É necessário que o sqlite3, esteja instalado na máquina.
Na pasta do projeto Class5, digite o seguinte comando: sqlite3 Chinook.db
Quando abrir na interface do terminal: sqlite> digite: .read chinook_sql.sql
Aguarde ser criado o banco de dados.
Para teste, basta efetuar o seguinte comando: SELECT + FROM Artist LIMIT 10;
Pressione duas vezes CONTROL + C, para sair do ambiente de sqlite

Execute o seguinte código: python main.py

Class5 - chat_db.py

Crie o cadastro no site: https://serpapi.com


 



